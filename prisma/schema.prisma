// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id String @id @default(cuid())

  pseudo String @unique

  email         String    @unique
  emailVerified DateTime?

  role Role @default(USER)

  passwordHash String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions Session[]
  family   UserFamily[]
  events   FamilyEventParticipant[]
}

model Session {
  id String @id @default(cuid())

  expiresAt DateTime

  userId String
  user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model UserFamily {
  id String @id @default(cuid())

  role Role @default(USER)

  userId String
  user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)

  familyId String
  family   Family @relation(references: [id], fields: [familyId], onDelete: Cascade)

  @@unique([userId, familyId])
}

model Family {
  id String @id @default(cuid())

  name        String
  description String?

  members UserFamily[]
  events  FamilyEvent[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FamilyEventParticipant {
  id String @id @default(cuid())

  eventId String
  event   FamilyEvent @relation(references: [id], fields: [eventId], onDelete: Cascade)

  userId String
  user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([eventId, userId])
}

model FamilyEvent {
  id String @id @default(cuid())

  title       String
  description String?
  date        DateTime @default(now())
  location    String?

  participants FamilyEventParticipant[]

  familyId String
  family   Family @relation(references: [id], fields: [familyId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
